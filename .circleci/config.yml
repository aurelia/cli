# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
workflows:
  version: 2
  node-multi-build:
    jobs:
      - test_node_8
      - test_node_10
      - test_docker

version: 2
jobs:
  test_docker:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 18.06.0-ce

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node8-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node8-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node8-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

      # create aurelia-apps based on the current cli, and test them inside docker containers
      - run: sudo npm link
      # four scaffolding using webpack with various configurations
      - run: au new first -u -s htmlmin-max,sass,postcss-typical,karma,cypress,docker && cd ./first && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new second -u -s http2,typescript,htmlmin-min,less,postcss-typical,jest,protractor,scaffold-navigation,docker && cd ./second && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new third -u -s dotnet-core,typescript,htmlmin-max,stylus,postcss-basic,jest,protractor,docker && cd ./third && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new forth -u -s http2,dotnet-core,htmlmin-min,sass,postcss-typical,karma,cypress,scaffold-navigation,docker && cd ./forth && npm install && npm link aurelia-cli && npm run docker:build
      # four scaffolding using Alameda with various configurations
      - run: au new fifth -u -s cli-bundler,alameda,htmlmin-max,sass,postcss-typical,karma,cypress,docker && cd ./fifth && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new sixth -u -s cli-bundler,alameda,http2,typescript,htmlmin-min,less,postcss-typical,jest,protractor,scaffold-navigation,docker && cd ./sixth && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new seventh -u -s cli-bundler,alameda,dotnet-core,typescript,htmlmin-max,stylus,postcss-basic,jest,protractor,docker && cd ./seventh && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new eighth -u -s cli-bundler,alameda,http2,dotnet-core,htmlmin-min,sass,postcss-typical,karma,cypress,scaffold-navigation,docker && cd ./eighth && npm install && npm link aurelia-cli && npm run docker:build
  test_node_8:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node8-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node8-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node8-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

  test_node_10:
    docker:
      - image: circleci/node:10-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node10-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node10-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
