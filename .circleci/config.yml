# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
workflows:
  version: 2
  node-multi-build:
    jobs:
      - test_node_8
      - test_node_10
      - test_docker

version: 2
jobs:
  test_docker:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          version: 18.06.0-ce

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node8-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node8-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node8-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

      # create aurelia-apps based on the current cli, and test them inside docker containers
      - run: sudo npm link
      - run: au new first_sample -u -s karma,cypress,docker && cd ./first_sample && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new second_sample -u -s typescript,jest,protractor,scaffold-navigation,docker && cd ./second_sample && npm install && npm link aurelia-cli && npm run docker:build
      - run: au new third_sample -u -s dotnet-core,typescript,karma,cypress,scaffold-navigation,docker && cd ./third_sample && npm install && npm link aurelia-cli && npm run docker:build
  test_node_8:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node8-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node8-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node8-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

  test_node_10:
    docker:
      - image: circleci/node:10-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - node10-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - node10-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: node10-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
