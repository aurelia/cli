{
  "transpiler": {
    // @if feat.babel
    "options": {
      "plugins": [
        ["@babel/plugin-transform-modules-amd", {"loose": true}]
      ]
    },

    "source": [
      // @if feat.plugin
      "dev-app/**/*.js",
      // @endif
      "src/**/*.js"
    ],
    // @endif

    // @if feat.typescript
    "dtsSource": ["./types/**/*.d.ts"],
    "source": [
      // @if feat.plugin
      "dev-app/**/*.ts",
      // @endif
      "src/**/*.ts"
    ],
    // @endif
  },
  "markupProcessor": {
    "source": [
      // @if feat.plugin
      "dev-app/**/*.html",
      // @endif
      "src/**/*.html"
    ],
  },
  "cssProcessor": {
    // @if ! (feat.less || feat.sass || feat.stylus)
    "source": [
      // @if feat.plugin
      "dev-app/**/*.css",
      // @endif
      "src/**/*.css"
    ],
    // @endif

    // @if feat.less
    "source": [
      // @if feat.plugin
      "dev-app/**/*.less",
      // @endif
      "src/**/*.less"
    ],
    // @endif

    // @if feat.sass
    "source": [
      // @if feat.plugin
      "dev-app/**/*.scss",
      // @endif
      "src/**/*.scss"
    ],
    // @endif

    // @if feat.stylus
    "source": [
      // @if feat.plugin
      "dev-app/**/*.styl",
      // @endif
      "src/**/*.styl"
    ],
    // @endif
  },
  "jsonProcessor": {
    "source": [
      // @if feat.plugin
      "dev-app/**/*.json",
      // @endif
      "src/**/*.json"
    ],
  },
  // @if feat.karma
  "unitTestRunner": {
    // @if feat.babel
    "source": "test/unit/**/*.js",
    // @endif
    // @if feat.typescript
    "source": "test/unit/**/*.ts",
    // @endif
  },
  "testFramework": {
    "id": "jasmine"
  },
  // @endif
  "platform": {
    // @if feat.web
    "port": 9000,
    "host": "localhost",
    "open": false,
    "index": "index.html",
    "baseDir": ".",
    "output": "scripts",
    // @endif

    // @if feat['dotnet-core']
    "port": 5000,
    "index": "wwwroot/index.html",
    "baseDir": "./wwwroot",
    "baseUrl": "scripts",
    "output": "wwwroot/scripts",
    // @endif
  },
  "build": {
    "targets": [
      // @if feat.web
      {
        "port": 9000,
        "index": "index.html",
        "baseDir": ".",
        "output": "scripts"
      },
      // @endif

      // @if feat['dotnet-core']
      {
        "port": 5000,
        "index": "wwwroot/index.html",
        "baseDir": "./wwwroot",
        "baseUrl": "scripts",
        "output": "wwwroot/scripts"
      }
      // @endif
    ],
    "options": {
      "minify": "stage & prod",
      "sourcemaps": "dev & stage",
      "rev": false,
      "cache": "dev & stage"
    },
    "bundles": [
      {
        "name": "app-bundle.js",
        "source": [
          "**/*.{js,json,css,html}"
        ]
      },
      {
        "name": "vendor-bundle.js",
        "prepend": [
          "node_modules/promise-polyfill/dist/polyfill.min.js",
          // @if feat.requirejs
          "node_modules/requirejs/require.js"
          // @endif
          // @if feat.alameda
          "node_modules/alameda/alameda.js"
          // @endif
          // @if feat.systemjs
          "node_modules/systemjs/dist/system.js"
          // @endif
        ],
        "dependencies": [
          "aurelia-bootstrapper",
          "aurelia-loader-default",
          "aurelia-pal-browser",
          {
            "name": "aurelia-testing",
            "env": "dev"
          },
          // @if feat.requirejs || feat.alameda
          "text",
          // @endif
          // @if feat.systemjs
          {
            "name": "text",
            "path": "../node_modules/systemjs-plugin-text",
            "main": "text"
          }
          // @endif
        ]
      }
    ],
    "loader": {
      // @if feat.requirejs || feat.alameda
      "type": "require",
      // @endif
      // @if feat.systemjs
      "type": "system",
      // @endif
      "configTarget": "vendor-bundle.js",
      "includeBundleMetadataInConfig": "auto",
      "plugins": [
        {
          "name": "text",
          "extensions": [
            ".html",
            ".css"
          ],
          "stub": false
        }
      ]
    }
  }
}
